name: Build and Publish to PyPI

on:
  release:
    types: [created]
  workflow_dispatch: # 允许手动触发
  push:
    tags:
      - "v*" # 推送版本标签时触发

jobs:
  test:
    name: Test Package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.10", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv sync

      - name: Run tests
        run: |
          uv run python -m unittest

  build-and-publish:
    name: Build and Publish to PyPI
    needs: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write # 可信发布所需
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Build package with uv
        run: |
          uv build

      - name: Check package
        run: |
          uvx twine check dist/*

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'release' || github.event_name == 'workflow_dispatch'
        uses: pypa/gh-action-pypi-publish@release/v1
        # 使用可信发布，无需明确提供 API 令牌

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7
